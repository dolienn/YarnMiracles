services:
  postgres:
    container_name: postgres-sql-bsn
    image: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: shop
    volumes:
      - postgres:/data/postgres
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    networks:
      - spring-demo
    restart: unless-stopped

  redis:
    image: redis:6.0.7
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - spring-demo
    volumes:
      - redis_volume_data:/data
    restart: always
    command: ["redis-server", "--port", "6380"]

  redis_insight:
    container_name: redis_insight
    image: redislabs/redisinsight:1.14.0
    ports:
      - "8001:8001"
    networks:
      - spring-demo
    volumes:
      - redis_insight_volume_data:/db
    restart: always

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 22181:2181
    networks:
      - spring-demo
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - spring-demo
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mail-dev:
    container_name: mail-dev-bsn
    image: maildev/maildev
    ports:
      - "1080:1080"
      - ${MAIL_PORT}:${MAIL_PORT}
    networks:
      - spring-demo
    restart: unless-stopped

  spring-boot-app:
    build: .
    container_name: spring-boot-app
    env_file:
      - .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - spring-demo
    depends_on:
      - postgres
      - mail-dev
      - redis
      - kafka
    environment:
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_MAIL_HOST: ${MAIL_HOST}
      SPRING_MAIL_PORT: ${MAIL_PORT}
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_REDIS_HOST: ${REDIS_HOST}
      SPRING_REDIS_PORT: ${REDIS_PORT}
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    volumes:
      - ./shop-ui/src/assets/images/products:/app/shop-ui/src/assets/images/products
    restart: unless-stopped

  angular-app:
    build: ./shop-ui
    container_name: angular-app
    ports:
      - "80:80"
    networks:
      - spring-demo
    depends_on:
      - spring-boot-app
    restart: unless-stopped

networks:
  spring-demo:
    driver: bridge

volumes:
  postgres:
    driver: local
  redis_volume_data:
  redis_insight_volume_data:
